"""Initial schema with all device fields

Revision ID: 001_initial_schema
Revises: 
Create Date: 2024-08-30 10:54:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '001_initial_schema'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Check if tables already exist (for backward compatibility)
    from sqlalchemy import text
    from alembic import op
    
    # Helper function to check if table exists
    def table_exists(table_name):
        try:
            result = op.get_bind().execute(text(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table_name}'"))
            return result.fetchone() is not None
        except:
            return False
    
    if not table_exists('oui'):
        op.create_table('oui',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('prefix', sa.String(length=8), nullable=False),
        sa.Column('manufacturer', sa.String(length=100), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('prefix')
        )
    
    if not table_exists('person'):
        op.create_table('person',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=100), nullable=True),
        sa.Column('image_path', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
    
    if not table_exists('settings'):
        op.create_table('settings',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('value', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key')
        )
    
    if not table_exists('device'):
        op.create_table('device',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('hostname', sa.String(length=255), nullable=True),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('mac_address', sa.String(length=17), nullable=False),
        sa.Column('brand', sa.String(length=100), nullable=True),
        sa.Column('model', sa.String(length=100), nullable=True),
        sa.Column('icon', sa.String(length=50), nullable=True),
        sa.Column('image_path', sa.String(length=255), nullable=True),
        sa.Column('is_online', sa.Boolean(), nullable=True),
        sa.Column('last_seen', sa.DateTime(), nullable=True),
        sa.Column('first_seen', sa.DateTime(), nullable=True),
        sa.Column('open_ports', sa.Text(), nullable=True),
        sa.Column('person_id', sa.Integer(), nullable=True),
        sa.Column('merged_devices', sa.Text(), nullable=True),
        sa.Column('os_info', sa.String(length=255), nullable=True),
        sa.Column('vendor', sa.String(length=100), nullable=True),
        sa.Column('device_type', sa.String(length=50), nullable=True),
        sa.Column('os_family', sa.String(length=50), nullable=True),
        sa.Column('netbios_name', sa.String(length=100), nullable=True),
        sa.Column('workgroup', sa.String(length=100), nullable=True),
        sa.Column('services', sa.Text(), nullable=True),
        sa.Column('category', sa.String(length=50), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('mac_address')
        )
    
    if not table_exists('scan'):
        op.create_table('scan',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('device_id', sa.Integer(), nullable=False),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('is_online', sa.Boolean(), nullable=True),
        sa.Column('response_time', sa.Float(), nullable=True),
        sa.Column('open_ports', sa.Text(), nullable=True),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
        sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scan')
    op.drop_table('device')
    op.drop_table('settings')
    op.drop_table('person')
    op.drop_table('oui')
    # ### end Alembic commands ###